---
# run this playbook with:
# ansible-playbook -i "$nginx_server_name," ./play-deploy.yml \
#   --private-key ./brno-blend-key.pem -u ubuntu

- name: Deploy BrnoBlend to production
  hosts: all

  vars:
    ec2_user: ubuntu
    nginx_server_name: 18.199.89.155
    repo_dest: "/home/{{ ec2_user }}/brno-blend"

  tasks:
    - name: Install tools for server to be able to run web service
      become: true
      package:
        state: present
        name:
          - podman
          - podman-compose
          - git
          - make
          - nginx

    - name: Install debug tools
      become: true
      package:
        state: present
        name:
          - vim
          - htop

    - name: Clone or update git repository
      git:
        repo: "https://github.com/JakubVeng/BrnoBlend.git"
        dest: "{{ repo_dest }}"
        version: "main"
        force: true
      register: git_result
      notify:
        - Restart application if necessary

    - name: Copy systemd service file
      become: true
      copy:
        src: "brno-blend.service"
        dest: "/etc/systemd/system/brno-blend.service"
        force: true
      when: git_result.changed

    - name: Reload systemd
      become: true
      service:
        daemon_reload: true
      notify:
        - Restart application if necessary

    - name: Ensure nginx service is running
      become: true
      service:
        name: nginx
        state: started
        enabled: true
        masked: false

    - name: Template nginx file
      become: true
      template:
        src: "nginx.conf.j2"
        dest: "/etc/nginx/sites-enabled/brno-blend-nginx.conf"
      notify:
        - Restart nginx

    - name: Ensure brno-blend service is running
      service:
        scope: user
        name: brno-blend
        state: started
        enabled: true
        masked: false

  handlers:
    - name: Restart application if necessary
      service:
        scope: user
        name: brno-blend
        state: restarted

    - name: Restart nginx
      become: true
      service:
        name: nginx
        state: restarted
